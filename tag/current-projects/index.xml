<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Current projects | Tichakorn (Nok) Wongpiromsarn</title>
    <link>https://tichakorn832.github.io/tag/current-projects/</link>
      <atom:link href="https://tichakorn832.github.io/tag/current-projects/index.xml" rel="self" type="application/rss+xml" />
    <description>Current projects</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Tue, 15 Feb 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://tichakorn832.github.io/img/nok.png</url>
      <title>Current projects</title>
      <link>https://tichakorn832.github.io/tag/current-projects/</link>
    </image>
    
    <item>
      <title>CAREER: Establishing Correctness of Learning-Enabled Autonomous Systems with Conflicting Requirements (NSF)</title>
      <link>https://tichakorn832.github.io/project/correctness-autonomy/</link>
      <pubDate>Tue, 15 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://tichakorn832.github.io/project/correctness-autonomy/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Award Number:&lt;/strong&gt; CNS-2141153&lt;br /&gt;
&lt;strong&gt;Amount:&lt;/strong&gt; 502,352&lt;br /&gt;
&lt;strong&gt;Start Date:&lt;/strong&gt; 02/15/2022&lt;br /&gt;
&lt;strong&gt;End Date:&lt;/strong&gt; 01/31/2027&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;Autonomous systems are subject to multiple regulatory requirements due to their safety-critical nature. In general, it is infeasible to guarantee the satisfaction of all requirements under all conditions. In such situations, the system needs to decide how to prioritize among them. Two main factors complicate this decision. First, the priorities among the conflicting requirements may not be fully established. Second, the decision needs to be made under uncertainties arising from both the learning-based components within the system and the unstructured, unpredictable, and non-cooperating nature of the environments. Therefore, establishing the correctness of autonomous systems requires specification languages that capture the unequal importance of the requirements, quantify the violation of each requirement, and incorporate uncertainties faced by the systems.&lt;/p&gt;
&lt;p&gt;The proposed effort targets a major gap in theoretical foundations and computational tools to enable practical applications of formal methods throughout the development process of autonomous systems that include learning-based components, operate in uncertain environments, and are subject to conflicting requirements with partially established priorities. Its key novelty lies in the development of (1) probabilistic rulebooks, a new specification formalism that captures the tradeoffs between the uncertainty and the degree of violation of the requirements and utilizes such violation risk together with partially established priorities among the requirements to establish a consistent order among the trajectories of the system, (2) minimum-violation control synthesis algorithms that minimize the total violation risk based on the probabilistic rulebooks and allow learning-based functionality to be incorporated in a provably correct manner, and (3) quantitative verification frameworks that utilize statistical analysis of the learning-based components and the environment as well as the probabilistic rulebooks to provide quantitative analysis of the system. Such development will serve as a critical step towards establishing assurance of autonomous systems. This project will validate the theoretical results and algorithms developed under the proposed effort on a small autonomy platform that will also be utilized for educational purposes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Developing a Low Visibility Navigation System (Iowa DOT)</title>
      <link>https://tichakorn832.github.io/project/navigation-system/</link>
      <pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://tichakorn832.github.io/project/navigation-system/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Award Number:&lt;/strong&gt; SPR174&lt;br /&gt;
&lt;strong&gt;Amount:&lt;/strong&gt; 502,265&lt;br /&gt;
&lt;strong&gt;Start Date:&lt;/strong&gt; 11/2021&lt;br /&gt;
&lt;strong&gt;End Date:&lt;/strong&gt; 10/2023&lt;br /&gt;
&lt;strong&gt;Collaborators:&lt;/strong&gt; Anuj Sharma (PI), Soumik Sarkar, Neal Hawkins, Eliot Winer&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Resource-Aware Hierarchical Runtime Verification for Mixed-Abstraction-Level Systems of Systems (NSF)</title>
      <link>https://tichakorn832.github.io/project/runtime-verification/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://tichakorn832.github.io/project/runtime-verification/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Award Number:&lt;/strong&gt; CNS-2038903&lt;br /&gt;
&lt;strong&gt;Amount:&lt;/strong&gt; 1,200,000&lt;br /&gt;
&lt;strong&gt;Start Date:&lt;/strong&gt; 01/01/2021&lt;br /&gt;
&lt;strong&gt;End Date:&lt;/strong&gt; 12/31/2023&lt;br /&gt;
&lt;strong&gt;Collaborators:&lt;/strong&gt; Kristin  Rozier (PI), Phillip Jones&lt;/p&gt;
&lt;p&gt;Piloting an aircraft is popularly described as hours of abject boredom punctuated by periods of abject terror. Similarly, a spacecraft in transit to a distant target remains largely dormant but for periodic heightened activity required for maintenance and staying on course. Aircraft and spacecraft are complex systems of systems that must seamlessly work together, switching control through a carefully orchestrated hierarchy representing different levels of abstraction, e.g., exemplified by different timescales for events. Each on-board system presents its own verification challenge; verifying that the symphony of all of them playing together at the same time, in the face of potentially unexpected environmental inputs, is particularly daunting. We can supplement design-time verification with efficient runtime verification engines, but they need to grow to be able to reason about the hierarchical nature of complex systems-of-systems, where single requirements may need to encapsulate multiple levels of abstraction. The final result must be able to execute in real time, within system resource constraints. Existing tools for runtime verification aren&amp;rsquo;t capable of obeying constraints imposed by running them on real systems (or in real missions), and don&amp;rsquo;t have parameters to focus their computational demands on the tasks most impactful on system safety. Achieving safe CPS depends on growing the tools and algorithms of real-time verification to integrate realistic safety checks into their control architectures and dynamic environments.&lt;/p&gt;
&lt;p&gt;This project adapts techniques from formal methods, control theory, hardware-software integration, and software engineering to design runtime monitors that inspect cyber-physical systems of systems without interfering with their normal operation. The project designs, analyzes, and implements fundamental runtime verification techniques by dealing with three general and orthogonal problems: mixed-abstraction-level granularity in specifications, resource-awareness to ensure non-intrusiveness of runtime monitors, and augmenting monitors with model-prediction to enable on-deadline mitigation triggering. Key innovations stem from this rigorous foundation in establishing a new formal semantics for hierarchical, mixed-abstraction-level specification, and evaluating formal specifications without interfering with the system&amp;rsquo;s normal operation, while maximizing utilization of resources within realistic constraints of embedded CPS. The project generalizes the new theory into specification patterns for hierarchical functional requirements and synthesize predictive models to enable better, more automated creation of runtime verification configurations to meet scalability demands of modern CPS. Flight tests of small aircraft swarms are used to validate this approach.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
